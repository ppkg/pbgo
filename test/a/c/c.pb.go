// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test/a/c/c.proto

package pbgo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BaseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseRequest) Reset()         { *m = BaseRequest{} }
func (m *BaseRequest) String() string { return proto.CompactTextString(m) }
func (*BaseRequest) ProtoMessage()    {}
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b413f29eb28c588, []int{0}
}

func (m *BaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseRequest.Unmarshal(m, b)
}
func (m *BaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseRequest.Marshal(b, m, deterministic)
}
func (m *BaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseRequest.Merge(m, src)
}
func (m *BaseRequest) XXX_Size() int {
	return xxx_messageInfo_BaseRequest.Size(m)
}
func (m *BaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BaseRequest proto.InternalMessageInfo

type BaseResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error"`
	Details              []string `protobuf:"bytes,4,rep,name=details,proto3" json:"details"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseResponse) Reset()         { *m = BaseResponse{} }
func (m *BaseResponse) String() string { return proto.CompactTextString(m) }
func (*BaseResponse) ProtoMessage()    {}
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b413f29eb28c588, []int{1}
}

func (m *BaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseResponse.Unmarshal(m, b)
}
func (m *BaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseResponse.Marshal(b, m, deterministic)
}
func (m *BaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseResponse.Merge(m, src)
}
func (m *BaseResponse) XXX_Size() int {
	return xxx_messageInfo_BaseResponse.Size(m)
}
func (m *BaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BaseResponse proto.InternalMessageInfo

func (m *BaseResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BaseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BaseResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BaseResponse) GetDetails() []string {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*BaseRequest)(nil), "pbgo.BaseRequest")
	proto.RegisterType((*BaseResponse)(nil), "pbgo.BaseResponse")
}

func init() { proto.RegisterFile("test/a/c/c.proto", fileDescriptor_3b413f29eb28c588) }

var fileDescriptor_3b413f29eb28c588 = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x31, 0x8f, 0x82, 0x40,
	0x10, 0x85, 0xc3, 0xb1, 0xdc, 0xe5, 0xe6, 0xce, 0x44, 0x27, 0x16, 0x1b, 0x2b, 0x42, 0x45, 0x05,
	0x89, 0x94, 0x76, 0xf6, 0x36, 0xc4, 0x3f, 0xb0, 0xc0, 0x04, 0x4d, 0xd0, 0xc1, 0x9d, 0xf1, 0xff,
	0x9b, 0x05, 0x4d, 0xa8, 0x66, 0xbe, 0x97, 0x57, 0x7c, 0x0f, 0xd6, 0x4a, 0xa2, 0xa5, 0x2b, 0xdb,
	0xb2, 0x2d, 0x46, 0xcf, 0xca, 0x68, 0xc6, 0xa6, 0xe7, 0x6c, 0x05, 0x7f, 0x47, 0x27, 0x54, 0xd3,
	0xe3, 0x49, 0xa2, 0xd9, 0x00, 0xff, 0x33, 0xca, 0xc8, 0x77, 0x21, 0x44, 0x30, 0x2d, 0x77, 0x64,
	0xa3, 0x34, 0xca, 0x93, 0x7a, 0xfa, 0xd1, 0xc2, 0xcf, 0x8d, 0x44, 0x5c, 0x4f, 0xf6, 0x2b, 0x8d,
	0xf2, 0xdf, 0xfa, 0x83, 0xb8, 0x85, 0x84, 0xbc, 0x67, 0x6f, 0xe3, 0x29, 0x9f, 0x21, 0xf4, 0x3b,
	0x52, 0x77, 0x1d, 0xc4, 0x9a, 0x34, 0x0e, 0xfd, 0x37, 0xee, 0x0f, 0x60, 0xce, 0x24, 0x8a, 0x15,
	0x40, 0xb8, 0x27, 0xd2, 0x0b, 0x77, 0xb8, 0x29, 0x82, 0x59, 0xb1, 0xd0, 0xda, 0xe1, 0x32, 0x9a,
	0xd5, 0x9a, 0xef, 0x69, 0x46, 0xf5, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xff, 0x1e, 0xe1, 0x79, 0xda,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestClient is the client API for Test service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestClient interface {
	TestMethod(ctx context.Context, in *BaseRequest, opts ...grpc.CallOption) (*BaseResponse, error)
}

type testClient struct {
	cc *grpc.ClientConn
}

func NewTestClient(cc *grpc.ClientConn) TestClient {
	return &testClient{cc}
}

func (c *testClient) TestMethod(ctx context.Context, in *BaseRequest, opts ...grpc.CallOption) (*BaseResponse, error) {
	out := new(BaseResponse)
	err := c.cc.Invoke(ctx, "/pbgo.Test/TestMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServer is the server API for Test service.
type TestServer interface {
	TestMethod(context.Context, *BaseRequest) (*BaseResponse, error)
}

// UnimplementedTestServer can be embedded to have forward compatible implementations.
type UnimplementedTestServer struct {
}

func (*UnimplementedTestServer) TestMethod(ctx context.Context, req *BaseRequest) (*BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestMethod not implemented")
}

func RegisterTestServer(s *grpc.Server, srv TestServer) {
	s.RegisterService(&_Test_serviceDesc, srv)
}

func _Test_TestMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServer).TestMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbgo.Test/TestMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServer).TestMethod(ctx, req.(*BaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Test_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbgo.Test",
	HandlerType: (*TestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestMethod",
			Handler:    _Test_TestMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test/a/c/c.proto",
}
